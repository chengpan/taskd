// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/proto/message.proto

package com.github.chengpan.proto;

public interface TaskOrBuilder extends
    // @@protoc_insertion_point(interface_extends:com.github.chengpan.proto.Task)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * used for deduplication with consumer_id
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <pre>
   * used for deduplication with consumer_id
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * readable info
   * </pre>
   *
   * <code>map&lt;string, string&gt; meta = 2;</code>
   */
  int getMetaCount();
  /**
   * <pre>
   * readable info
   * </pre>
   *
   * <code>map&lt;string, string&gt; meta = 2;</code>
   */
  boolean containsMeta(
      java.lang.String key);
  /**
   * Use {@link #getMetaMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getMeta();
  /**
   * <pre>
   * readable info
   * </pre>
   *
   * <code>map&lt;string, string&gt; meta = 2;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getMetaMap();
  /**
   * <pre>
   * readable info
   * </pre>
   *
   * <code>map&lt;string, string&gt; meta = 2;</code>
   */

  java.lang.String getMetaOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <pre>
   * readable info
   * </pre>
   *
   * <code>map&lt;string, string&gt; meta = 2;</code>
   */

  java.lang.String getMetaOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * binary body
   * </pre>
   *
   * <code>bytes blob = 3;</code>
   * @return The blob.
   */
  com.google.protobuf.ByteString getBlob();

  /**
   * <pre>
   * consumer signature which should be interested in this task when it is due. eg: com.git.pcheng.consumers.email#sendToSubscriber
   * </pre>
   *
   * <code>string consumer_id = 4;</code>
   * @return The consumerId.
   */
  java.lang.String getConsumerId();
  /**
   * <pre>
   * consumer signature which should be interested in this task when it is due. eg: com.git.pcheng.consumers.email#sendToSubscriber
   * </pre>
   *
   * <code>string consumer_id = 4;</code>
   * @return The bytes for consumerId.
   */
  com.google.protobuf.ByteString
      getConsumerIdBytes();

  /**
   * <pre>
   * for http callback
   * </pre>
   *
   * <code>string callback_url = 5;</code>
   * @return The callbackUrl.
   */
  java.lang.String getCallbackUrl();
  /**
   * <pre>
   * for http callback
   * </pre>
   *
   * <code>string callback_url = 5;</code>
   * @return The bytes for callbackUrl.
   */
  com.google.protobuf.ByteString
      getCallbackUrlBytes();

  /**
   * <pre>
   * sender signature
   * </pre>
   *
   * <code>string sender_id = 6;</code>
   * @return The senderId.
   */
  java.lang.String getSenderId();
  /**
   * <pre>
   * sender signature
   * </pre>
   *
   * <code>string sender_id = 6;</code>
   * @return The bytes for senderId.
   */
  com.google.protobuf.ByteString
      getSenderIdBytes();

  /**
   * <pre>
   * when should this task be done,aka，callback invoked
   * </pre>
   *
   * <code>.google.protobuf.Timestamp due_at = 7;</code>
   * @return Whether the dueAt field is set.
   */
  boolean hasDueAt();
  /**
   * <pre>
   * when should this task be done,aka，callback invoked
   * </pre>
   *
   * <code>.google.protobuf.Timestamp due_at = 7;</code>
   * @return The dueAt.
   */
  com.google.protobuf.Timestamp getDueAt();
  /**
   * <pre>
   * when should this task be done,aka，callback invoked
   * </pre>
   *
   * <code>.google.protobuf.Timestamp due_at = 7;</code>
   */
  com.google.protobuf.TimestampOrBuilder getDueAtOrBuilder();
}
